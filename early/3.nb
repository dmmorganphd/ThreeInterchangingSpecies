(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    164992,       3464]
NotebookOptionsPosition[    156453,       3320]
NotebookOutlinePosition[    157052,       3341]
CellTagsIndexPosition[    157009,       3338]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeYVEXWxz1+u6+iCMi6KrAGVFAwIGYWE0HERUTEgIiCgKCiBEkKZoKu
ElwEwQCoCIqiSFYEJEcJCyiiSFglqIthXX13Zbr7fr/v/p97vprumZ6GSehb
/+eZfu5031u3wqk6/3Oq6tSJbbs06/D/ZGVldS/FR7M299Xt1q1N7+uO4J8b
One/647O7W//S+ce7e9o361W29/x5VT+unLx/10HHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgcAEiF0HQ+R
5uZYLGY3cKEH+eQ6OzubXy2pAxD//e9///Of/1ieYyHyfUr1o4JzQTFV3swL
y8179+5Nepdb7ZnAXmr1X/CqdlNQ+qk3uG+0b4KckqB/KaPqR1VkP7nFz1fA
PAoRSUKuJna7rSGvFGg46zKWwi+//EITW1LWpkrK0i/EUiSJkztekRMy6QpV
oWfAw8PDwyMTmNIBqZzQJU4uuxBzsGvRCREJUzH7RLqKqGgu/h3CfhLzyZc/
S1vpU/pL5bLy5psH3Sy65er0fBVf0s1qI1eJF7BuLU01vVscqzQrphVfNWCi
oixxGzRDF1ZXSoo7YfK6TS/Kl8Z4FBxu45rgpYqQCZJZhcbQ+IY2hU8qQXuW
1lRbK2WTHOvymZhp+WbezZWu9TrLpF4kwTNRVOa9aHl4eHgUPzQOMybLiZTq
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
6U0VDw8Pj+KHOxcplQF9Yog+77zzfv/73//P//zP7373u/8nAtf6Up8HH3xw
1apV0S/PP//86tWrv/vuu5gTz9Bdo2WfSXNwykMiLfK6J+lL9189IrUybdq0
atWqkdWDDjqoVq1aaEAKaPzZVX/uhflbVCFPPvlkjRo1qIE//vGPsGi+ydC9
qdlhblu0aBFUvHz58r+PcNJJJ6G1k5a3WX7sX+g9+r1y5cqHHHIIT/F5xBFH
wNa2b98eFJhPWtNr5eSuXbtgzpRU7QtKlSrVtWtXuKsbAcCmON1wTAsWLKB6
lUnkhGf5Fy7qeq0lHvEo4Exqk+UqKrkKQGqT2T1J36Q+npS+K6V5SVdeb89V
8FJvTv03Nf+5vmK/oUTMwShRh6RhxSDDaqDfhVC/FtTuGE1169Z94IEHsMW+
/fZbW80ShP7JO+64A9OM3gSfpHMlommIeG6n5CQiozLzcuk2KCJksmzZstZf
kkYhG4L+8Ic/wDaHDRuGYQvdtcW6uTZrYVWvh4eHh0cqbIyVkwpaCJ88++yz
s7KypGUOP/xwVAzU4tBDD4UwaBiXPuKbI4888k9/+tOFF17IkP6vf/3r559/
lv6y8HHm1LLQx3xjKwDjTkxsrRK0azfSY9I2ZFNe4mx2io0bSFPFmTFjRs2a
NSmC+OQbb7yhmfqkqXlb2qfsKeqI9A73Dxo06IwzzqBCIIRPPfXUjh07jBql
r1ujK8uWLbvtttvKlCkjTkhmjjrqqC5duqxbt86S0trUeLRSUZttP/vss1at
WnG/qVQebNOmDXkICsYn3aYXn/znP//5t7/97fTTT1fT80bee9lll02YMEGu
KrWmxQsyHy9VNHLkyGOOOYb7eZDHEY8///nPr7/+uuvPNKdukhPbCI/JjFUI
70pEfidbvZlwjk1xOYO7qjOesnFDMQxVUpM6vvn3v//txvY0LhRzYn5qYZ5t
Q1OCtinJlWe1pjazxJw98krEXSTg5t+SStroVJCWtQubetiwYcO9995Lh0WK
6Ln04tKlS6tTq1+XikB/4bb69euPHj36hx9+UM0HIZ9s165dhQoVaOJjjz12
8uTJMSfGVBAJvAUf4HsYqbio28XSZ55E3n333caNGx922GG8iNySPbJExvhG
OQdc8w2/8hOZYciCLdNfbLGxXuSKjeeTHh4eHkWHJD75/fffP//88+eccw4j
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
9fnnn2OVYNzpmGxbMSJqFOS0+Fy5svZFMDDeteXtzDPPdPmk+eQTzlEyJhuW
AjIGn1QH1PpVOdLNq6mn+HL58uWwdBmY1B6V6aaD/l27di0FQWDIFS1u/li9
VHxSMdUZWyZPnqxgUBZEVBaECk7lLFy4sEOHDscff7yUFNoQrqto/MqYmCc9
lzdSezQ6zSQTUkIob/MBy1t+G8h2Vk1nRydmmpjZwBtEi9itO9vamAMNhcsn
3WTNekJKjQrmugQRTqihLK8qSsMnr7vuuqTpaQt9qcn0zF2UejvjJKU2dqo0
n3jiCfq4ZvALyz954YUXMs506dIlKed8QguDKJxghjlPhEHqFGXFzXn79u2/
++67888/3/PJTJDKJ6m90aNHy9+CNocFaQVIkJO9xMNgdLNnz3700UevueYa
MaVDDz0UIqrzayCNEgbYqYJD0tatWrUiNTuuzpwwdId33323RYsW8uCdffbZ
KDuzj8zzxlOo1CuuuKJ06dLcCaNAWaOp0eP9+vWDBlgwQysOfLJu3boKFWic
k58o5rhx42AmSHXZsmWRajiw+SusmGRs+vTpdDdexJ1UyODBgyG6tgou37pV
TiAMsCltMJF/0o4yT20L+9e+UW4RYKSdqhafTEQ7oVTSqVOnQkXg2DfccAND
B1zLZvAzbHoadNiwYTCNrNA/CZ/Ufhx5k1Q58ei4Z/NoaRyIhae0Uy53P47O
x9FUOK3z4osv0lK0BZSybdu2ECSXh9grdGijJAoKbcf0AJ3P4vonFVdQiVhq
ImDaBQZRhJYw+LzwwgvymSeiPchkgFpFJpFPraQlzzbfzUXt2rUVAeCiiy4y
v2UimpRXIrRst27dtMBGp0Nu2rQpEcWf1Pk4WWH8yYkTJ/4cwrUXlBrsy/yT
jRo1mjZtmnZpqYYZNrGD+vbtS/tSvagPegd8TOs8bZuzyZu1UZK1Iv+kZqu1
ftJGctcuMK5rXlygzGBz6fxu8Xna1xZmJJzd02RpxYoVmKLik9B1erf54YNo
jQFlgTQiCVgx27Zts8xzJ90WO0J8Ek2NbOeqHXg79U9tIDA0ogZ8MqaIo2La
GhP03tdffx0FKjuUVnvvvfdkzmQ7+3o8pSw6WCWr2s2kNXmLhYd1SqjcHm12
zYHWOkXEJy1xG3UffvjhrJSwsYq7yKdOjsjrLWn4JDqRn95++20jY8aX6La2
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
qfPOO69fv35z587dvn07NweRVaUh13WkaFbXPEuuRR843o9cyWQSn3S9T2Jr
vIvebbNdJVt75gxRGaVJ+RItHHfmyNx7TFH+GkfXQoTxH5tXjeVcSqEW17/2
vTl4g3AsMieV1bA9XsLFKxhc9xT9SJTSqsXYZjxlhcm+6oK8oJRlbKrfmdDG
nPloI3XyrekpsyWNd8WcaWszH/JCds65bON1upZIuMOFXHx6r+LyaTSzLRv7
xCr1ChvNzMZJhB5LeV9jzuJSQTTSXJoJxz8Zj6b7E9FUC/eQjt0Wd9zvqh+t
6nFtK3PL783jjJIDBNadZfhIYMyOzrfpD0AUKZ8084oqskO03VjQomRnnXUW
OjfIm9gUIp/cDxwgfHI/4PlkoUOjGSMYbafR2PghqmTt2rXDhg27+uqrK1eu
XKZMmQoVKtSvX3/gwIGrV6+GiGqU4Fnu1NCh1YMaPM1jmeRIjDkr1RNp4T4b
i2Y5Lc8lTsaSdKgpWZSFKiSIJuOsOPrUVPj/ZT4pmmSeGSMPRrZdB7jqWUyA
C8Z2s+i1Wcyq1/jV3qI5zLc4YV4so5R7c+7vMMGT4t4nL1y+cN9iFSvfo8v5
TaTtSyRfxlQiXNIgjicelTmpcCVBU9u2ZFRpKhFdq9RcMyLJvjA+6QpGzNm+
ke+reZzUoNMxZ2o77izpTDi7Gq0vc/9XX32V7ayOjkdLvrOd3UNufqxarDLN
lDC2LGvCSHXBG7fooNzGo/VIttpZ7W4991eEIuKTcWc3+tatW6+55pqkae6s
KEbQoYce+uabbwZ5H3cYeD65v/B8snCRRHLcaxsMd+3atWzZsiFDhtStW7dU
qVKlS5euVq3aDTfc8PzzzyNCZpjrKZn2Lj2Q6W0iEXemihLRfLGZ4S70pbti
001H41XJzv6YqpK6t+X3sWhy1uXM7ryP61AqwfyXLFw2Yrpe9ojqx3VtxZzV
kqncSbKnB00Rl3T5CgqK88MPP5hQUTSUmnY6xKJpZVE1WxvAuA0LKnjZZbsp
sl/MmUZ3129kO1vquFk0Uo1o893u/S7zzDeH6lPGCZNsT/PT2lodkw0TG7vf
/Jb/b3vvHrb1mPX/93yPYx5mMPMQ8gwz4yk1silUI6VSSIpQoYRSNiXShrQT
KlKpVLShoqFQkW0bFZGSTUUhMcVjz2Oex3x/v+93uq/d5/s6Pu/jXMe6r6v7
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
I1jYFWXCCn7RA37+eunKhL240hteY+Sc020QVK0yUVeTrEe5EAstC5mFRF7V
ZF1A2Itr3sU5bVwWLFhwyimn7LPPPkcdddSUKVOU6SIXXDDrqQ1rxJORIv1k
KesuT5G5t6Uow4SVvO4NkwWjSjWtavELjmbpTJEW6bpMmm1G67YeSBTSAJ1h
rUL5GItptoLbcecNhPfo8y7w5cOz3jJ6xVvmllnzwd/Pl9/jl4SlRlPO3hz4
UE9Rx2VWLKpj4DDv4mDWhkJ67smiiGbyDHXzqxLxVT52WRemy7uVsqLeWTgi
76Kp+fKRQDu95fmWDTsM7ctM+ZXKXFjL8+A8464dL5S/r81YUQjAT+0p2jPg
kaSZbGtVwQWgMiFRoSC6FxvfBsMDHrRYH4uWMktFKJuu8O5MzzsYpKx8YhbC
9S4eVVr3K39X3TFR0Sjr7LOVY0218fWzKRciaSar2RDptZb7QgrhMnHPgXw4
iVPkeZnA+xI8UK+8gyZytp3YxsWCsYk73GeYU8+Y2Nj8yjtQl3Vbx600scI2
QthjRTrQarGVHWNFweX58VLhEbgGyLhhuqiQajzbVJMtv8Vdu0qKqtOE8qgv
40Kafv7mS1x1m01//vOfLS/xgQce2L9//23btuXSFXMxTTPXuy2mXSNFivTT
pHz5dDeZcLzCQEUl75rGS9zhPjMZpbbDm+kiVZYNS9uFsIUy6/bneIXsPeKC
i/7ly68dJy4zTxJiKYaLzBPPuTXrJFgrs+Pmv5sV9nbTF5UL60oWSZDJKzK7
uRAFMobn3f2/VmzBIStjdc6FwswWmEE0xGWrxpWPuzHHW/mikv3Y+SE2o1b0
sIcfxhA/Rsa0nAts5sLCn/cRbF3Pv54pf7JYr3uRKAW0BRefLMI8HgYU4Ukv
4WaITXg8rwrlt/PlnfdR1KRCeURd+egUQpTPD/1ujqy1yrfQOm7OV9FkNDKe
6yeLSebTA2UKjpmcG/Pt+Vz5Dcm+WEEOP9eMsf6byjtYCPmCjKt2fqQIbxcC
JtdnOz/uZ2u+/NmrMndYyUTd9nJ7MfC1+PG1KWDj7l/JO9zuKyryXPLuEJOX
ImuwULr/MucOwRUhVZOiMpfBwGNIKyEXdkEk6VX13bp1a9y4cZ06ddq1a/fK
K69kXRDew90kbJcypkWKFOknS14P5B0+rFK3JxXfvVKkZku/LKVc+ZCO/8na
41tbKA9yvFq2Zlj7fV+sa0VV2K9FsMRX58tPHN6wb+zdXFh3K2WLN0mlzS56
uKJvijjs663cCyhiSBEb/bAWnMkoalu+vB9RNAoVtbPomyJo4cfXfvLt8d1M
yud7KWpDUiJvu+yy706VrlNF/5Z2ragvRRUVsboiKuKwt/hVvlvUqqJJXaiU
iprtByLrltq9l+FrrLKoXT6/y2ZXREWg0ZyXXRblG2w4regZz6gijVcov8e7
8rYVjVdpj4r6XvRiRZ+Las87SnbFdl+CZ7gfyoqGyVoOin7ttdfWprRp0yaf
Vq7UKFQ5fSJFihQpUqRIkSJFqhLnR4oUKVKkSJEiRYrkKefo+25LpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFCnSPxP9PwdD4bE=
    "], {{0, 178.}, {880., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Full-resolution Image", "ImageWidth" -> 1218, 
        "ImageLength" -> 246, "BitsPerSample" -> {8, 8, 8}, "Compression" -> 
        "Uncompressed", "PhotometricInterpretation" -> "RGB", "DocumentName" -> 
        "E:\\OneDrive\\code\\github\\ICardiodLise\\dmmdblharpoon.tif", 
        "ImageDescription" -> "Created with GIMP", 
        "StripOffsets" -> {8, 467720}, "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 3, "RowsPerStrip" -> 128, 
        "StripByteCounts" -> {467712, 431172}, "XResolution" -> 300, 
        "YResolution" -> 300, "PlanarConfiguration" -> "Chunky", 
        "ResolutionUnit" -> "Inch", "SubIFDs" -> "938412", 
        "SampleFormat" -> {"Unsigned", "Unsigned", "Unsigned"}]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{431.55000000000007`, Automatic},
  ImageSizeRaw->{880., 178.},
  PlotRange->{{0, 880.}, {0, 178.}}]], "Output",
 CellChangeTimes->{3.8009896112672367`*^9, 
  3.800990913821066*^9},ExpressionUUID->"1b6f1975-89d3-4941-b74c-\
c6e6640a9053"]], "Text",
 CellChangeTimes->{
  3.801137180401614*^9},ExpressionUUID->"a4af07f8-0f31-4d4d-8ddf-\
0797ee099977"],

Cell[CellGroupData[{

Cell["\<\
Solution of Coupled Differential Equations Describing The Time Evolution of a \
System of Three Interchanging Species\
\>", "Title",
 CellChangeTimes->{{3.79987800570578*^9, 3.799878010303668*^9}, {
  3.800808007642687*^9, 3.800808015551523*^9}, {3.8011371949092693`*^9, 
  3.801137259712585*^9}},ExpressionUUID->"969e6714-a59c-4d3f-9d75-\
e00f7d8b7b2b"],

Cell[TextData[StyleBox["This notebook has been created with Mathematica \
Commercial License L3302-6545 . ",
 FontSlant->"Italic",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.799958787694915*^9, 3.799958917176119*^9}, {
  3.799959159335161*^9, 3.799959296183918*^9}, {3.799962639485429*^9, 
  3.7999626852427797`*^9}, {3.799962798917831*^9, 3.799962800990922*^9}, {
  3.800293824579274*^9, 3.800293865820447*^9}},
 TextAlignment->Right,ExpressionUUID->"db93a966-6d4f-4e83-aa73-f274025bcb39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Date", "[", "]"}]], "Input",
 CellChangeTimes->{{3.801137437303851*^9, 3.801137442511999*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d5e153e9-a887-4a09-bf08-47790220666f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2020", ",", "6", ",", "17", ",", "17", ",", "56", ",", 
   "13.15876`7.87178995159952"}], "}"}]], "Output",
 CellChangeTimes->{
  3.801137437785832*^9, 3.80139987740126*^9, 3.8014000896203413`*^9, 
   3.8014001239170113`*^9, 3.801403179224093*^9, 3.8014038220822067`*^9, 
   3.801405202632722*^9, 3.801406005538459*^9, 3.801413367059641*^9, 
   3.8014140153251143`*^9, 3.801414677535088*^9, {3.801415848827916*^9, 
   3.801415865455076*^9}, 3.8014161731605663`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"6eefd2de-dd2f-4b09-861e-2d2931e38991"]
}, Open  ]],

Cell["\<\
<Date of github first commit> 

Copyright (c) David M. Morgan, Ph.D.
GNU General Public License, v. 3.0 or later

Antigonish Landing, NS B2G 2L2 Canada
dmmorgan@gmail.com
(902) 318-4906\
\>", "Text",
 CellChangeTimes->{{3.7999628047731113`*^9, 3.79996281342213*^9}, {
  3.799962866758527*^9, 3.7999628956860027`*^9}, {3.8002938530727587`*^9, 
  3.8002938711634073`*^9}, {3.800293909924945*^9, 3.8002944345050583`*^9}, {
  3.8003134957690477`*^9, 3.800313604548006*^9}, {3.8003136433575687`*^9, 
  3.8003136502424507`*^9}, {3.800313680738512*^9, 3.800313933550432*^9}, {
  3.80031396556758*^9, 3.800314054692861*^9}, {3.800314164846736*^9, 
  3.800314167918345*^9}, {3.800808025466436*^9, 3.8008080660530453`*^9}, {
  3.801137429635413*^9, 
  3.801137435990624*^9}},ExpressionUUID->"3630ed3d-5165-4127-8c22-\
b13aeac4d0a0"],

Cell[TextData[StyleBox["System: ", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.799879547156506*^9, 3.799879558304983*^9}, {
   3.8011379890575027`*^9, 3.8011379905699673`*^9}, 
   3.801138080689164*^9},ExpressionUUID->"f10ad161-96a8-441f-859b-\
38f8adcec4fa"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    
    "], {{0, 309.}, {399., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Full-resolution Image", "ImageWidth" -> 399, 
        "ImageLength" -> 309, "BitsPerSample" -> {8, 8, 8}, "Compression" -> 
        "LZW", "PhotometricInterpretation" -> "RGB", "DocumentName" -> 
        "/home/david/github/ThreeInterchangingSpecies/ABC small.tif", 
        "StripOffsets" -> {8, 1676, 4932, 9958, 13355}, "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 3, "RowsPerStrip" -> 64, 
        "StripByteCounts" -> {1668, 3256, 5026, 3397, 915}, "XResolution" -> 
        200, "YResolution" -> 200, "PlanarConfiguration" -> "Chunky", 
        "ResolutionUnit" -> "Inch", "Predictor" -> 
        "Horizontal differencing"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{282.75, Automatic},
  ImageSizeRaw->{399., 309.},
  PlotRange->{{0, 399.}, {0, 309.}}]], "Input",
 CellLabel->"In[33]:=",ExpressionUUID->"948c7bec-bde0-44bc-abf3-fd1d23cf4d2e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    
    "], {{0, 309.}, {399., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Full-resolution Image", "ImageWidth" -> 399, 
        "ImageLength" -> 309, "BitsPerSample" -> {8, 8, 8}, "Compression" -> 
        "LZW", "PhotometricInterpretation" -> "RGB", "DocumentName" -> 
        "/home/david/github/ThreeInterchangingSpecies/ABC small.tif", 
        "StripOffsets" -> {8, 1676, 4932, 9958, 13355}, "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 3, "RowsPerStrip" -> 64, 
        "StripByteCounts" -> {1668, 3256, 5026, 3397, 915}, "XResolution" -> 
        200, "YResolution" -> 200, "PlanarConfiguration" -> "Chunky", 
        "ResolutionUnit" -> "Inch", "Predictor" -> 
        "Horizontal differencing"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{282.75, Automatic},
  ImageSizeRaw->{399., 309.},
  PlotRange->{{0, 399.}, {0, 309.}}]], "Output",
 CellChangeTimes->{
  3.801399877619482*^9, 3.8014000897474537`*^9, 3.801400124029243*^9, 
   3.801403180510502*^9, 3.80140382220997*^9, 3.801405202750898*^9, 
   3.8014060056905527`*^9, 3.801413367259261*^9, 3.80141402079106*^9, 
   3.801414677644257*^9, {3.80141584895912*^9, 3.8014158701224833`*^9}, 
   3.8014161733214607`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"65ed21fc-45e5-481f-a560-67f22508bad3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Set of Coupled Differential Equations Describing the Time - Evolution of the \
System : \
\>", "Subsubsection",
 CellChangeTimes->{{3.801138066046813*^9, 
  3.801138117634902*^9}},ExpressionUUID->"87ac86e4-9f78-4b00-82e4-\
a470a2824931"],

Cell[TextData[{
 "The concentration of species A, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "A", "]"}], TraditionalForm]],ExpressionUUID->
  "ac4608aa-558d-4298-99cc-f3155d2a2028"],
 ", decreases ",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      SubscriptBox["k", 
       StyleBox[
        RowBox[{"1", " "}],
        FontSlant->"Italic"]], 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         FormBox[
          SubscriptBox["k", 
           StyleBox["2",
            FontSlant->"Italic"]],
          TraditionalForm], "+", 
         FormBox[
          RowBox[{
           RowBox[{
            SubscriptBox["k", 
             StyleBox[
              RowBox[{"-", "1"}],
              FontSlant->"Italic"]], ")"}], " "}],
          TraditionalForm]}]}]}]}
    }], TraditionalForm]],ExpressionUUID->
  "c9e25072-edce-46ca-882f-25d5a63a9c51"],
 "over time as it spontaneously converts to B with rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", " ", 
    RowBox[{"-", 
     SubscriptBox["k", 
      StyleBox["1",
       FontSlant->"Italic"]]}]}], TraditionalForm]],ExpressionUUID->
  "a30436be-bdfd-4909-a597-6b6e228afce0"],
 "[A]. It is disappearing, so this term is negative. It also disappears as it \
converts to C with a rate = -",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox[
     RowBox[{"-", "3"}],
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "27dda455-591c-40ef-9ad1-0cd8f31df463"],
 "[A]; ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", "A", "]"}], TraditionalForm]],ExpressionUUID->
  "f251bb47-9c94-44b2-a487-bf7fb55daa2c"],
 " increases as B reconverts back to A with rate = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"+", 
    SubscriptBox["k", 
     StyleBox[
      RowBox[{"-", "1"}],
      FontSlant->"Italic"]]}], TraditionalForm]],ExpressionUUID->
  "41c0bd14-6726-459c-952f-bb6de0f55107"],
 "[B], and as C reconverts back to A with rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"=", " ", 
    SubscriptBox["k", 
     StyleBox["3",
      FontSlant->"Italic"]]}], TraditionalForm]],ExpressionUUID->
  "750ce764-0202-4456-8477-79573bb22cdb"],
 "[C]. Formally, this is equation (1). Equations (2) and (3) may be found \
similarly.  \n\n(1)\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"[", "A", "]"}]}], TraditionalForm]],ExpressionUUID->
  "44756247-ec95-4ab9-84a5-c540e4add903"],
 " = -(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["1",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "ce4e47c4-08e8-4248-9d82-16b1b0118bc1"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox[
     RowBox[{"-", "3"}],
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "61c04051-c83a-4c88-b73c-5428ff140caa"],
 ") [A] + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", 
     StyleBox[
      RowBox[{"-", "1"}],
      FontSlant->"Italic"]], " "}], TraditionalForm]],ExpressionUUID->
  "e5d2c9c6-aabe-4ed8-9c0c-933203c63b93"],
 "[B] + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", 
     StyleBox["3",
      FontSlant->"Italic"]], " "}], TraditionalForm]],ExpressionUUID->
  "3b6154bd-d672-41d1-a0dc-7f5bf63365b9"],
 "[C]\n\n(2)\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"[", "B", "]"}]}], TraditionalForm]],ExpressionUUID->
  "a17fc651-ea33-48a2-a06d-5b4bec685fee"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox[
     RowBox[{"1", " "}],
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "42b79ab9-32d9-43d3-996a-78f9da616b98"],
 "[A] - (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["2",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "c18f6e1a-02fa-481a-95ce-f38f1a8d578c"],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["k", 
      StyleBox[
       RowBox[{"-", "1"}],
       FontSlant->"Italic"]], ")"}], " "}], TraditionalForm]],ExpressionUUID->
  "c51c662c-7678-4cd0-8e4f-6fc73fb0e124"],
 "[B] + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", 
     StyleBox[
      RowBox[{"-", "2"}],
      FontSlant->"Italic"]], " "}], TraditionalForm]],ExpressionUUID->
  "1b5cbb30-759e-46ec-8420-3aecfa0650b1"],
 "[C] \n\n(3)\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    RowBox[{"[", "C", "]"}]}], TraditionalForm]],ExpressionUUID->
  "68d029b4-c757-4b76-af49-37233d43b64f"],
 " =  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", 
     RowBox[{"-", "3"}]], " "}], TraditionalForm]],ExpressionUUID->
  "611a5dc8-4977-4c7a-a207-ee3ee2ee986f"],
 "[A] + ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "2"], " "}], TraditionalForm]],ExpressionUUID->
  "f22bfe19-6136-419b-9b05-1cbd26c18884"],
 "[B] - (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["2",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "a6bef3b0-f252-4f85-ada3-76ab0d6dae5d"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["3",
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "34e3bdf3-32d6-4cde-b411-62d7033c7298"],
 ") [C]\n\nDefine these as the linear, constant coefficient, matrix equation ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    OverscriptBox["u", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "35cc778d-d03e-418d-90ec-d246e34fe310"],
 " = AA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f8c585bb-eaeb-4893-9a86-65515e0cb3fc"],
 ", \n\nin which ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "68521f41-8c66-48bc-9f6b-29dd1cc78618"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"[", "A", "]"}]},
       {
        RowBox[{"[", "B", "]"}]},
       {
        RowBox[{"[", "C", "]"}]}
      }], ")"}], " ", "and", " "}], TraditionalForm]],ExpressionUUID->
  "f8a6a66d-a6ed-4aab-ad1d-ee2b704dabfa"],
 "AA = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          FormBox[
           SubscriptBox["k", 
            StyleBox["1",
             FontSlant->"Italic"]],
           TraditionalForm], "+", 
          FormBox[
           SubscriptBox["k", 
            StyleBox[
             RowBox[{"-", "3"}],
             FontSlant->"Italic"]],
           TraditionalForm]}], ")"}]}], 
       RowBox[{
        SubscriptBox["k", 
         StyleBox[
          RowBox[{"-", "1"}],
          FontSlant->"Italic"]], " "}], 
       RowBox[{
        SubscriptBox["k", 
         StyleBox["3",
          FontSlant->"Italic"]], " "}]},
      {
       SubscriptBox["k", 
        StyleBox[
         RowBox[{"1", " "}],
         FontSlant->"Italic"]], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          FormBox[
           SubscriptBox["k", 
            StyleBox["2",
             FontSlant->"Italic"]],
           TraditionalForm], "+", 
          FormBox[
           RowBox[{
            RowBox[{
             SubscriptBox["k", 
              StyleBox[
               RowBox[{"-", "1"}],
               FontSlant->"Italic"]], ")"}], " "}],
           TraditionalForm]}]}]}], 
       RowBox[{
        SubscriptBox["k", 
         StyleBox[
          RowBox[{"-", "2"}],
          FontSlant->"Italic"]], " "}]},
      {
       RowBox[{
        SubscriptBox["k", 
         RowBox[{"-", "3"}]], " "}], 
       RowBox[{
        SubscriptBox["k", "2"], " "}], 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          FormBox[
           SubscriptBox["k", 
            StyleBox[
             RowBox[{"-", "2"}],
             FontSlant->"Italic"]],
           TraditionalForm], "+", 
          FormBox[
           SubscriptBox["k", 
            StyleBox["3",
             FontSlant->"Italic"]],
           TraditionalForm]}], ")"}]}]}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "0fd9e9cf-ec5f-4bcb-ad3a-a1bceae265d9"],
 "."
}], "Text",
 CellChangeTimes->{{3.8011383149762373`*^9, 3.8011383183657913`*^9}, {
   3.801138352989959*^9, 3.801138412900578*^9}, {3.8011384636752853`*^9, 
   3.801138559818424*^9}, {3.8011386080340843`*^9, 3.8011387404084883`*^9}, {
   3.801138795423922*^9, 3.8011390392286386`*^9}, {3.8011390872758923`*^9, 
   3.80113909611579*^9}, {3.801139128467358*^9, 3.8011394036160393`*^9}, {
   3.8011394382281933`*^9, 3.801139438662225*^9}, {3.801139493586965*^9, 
   3.8011395106469183`*^9}, {3.801139583470647*^9, 3.8011396605818863`*^9}, {
   3.801140131083829*^9, 3.801140227357252*^9}, {3.80114028190343*^9, 
   3.8011403535378513`*^9}, 3.8011412630749493`*^9, {3.8011420241095552`*^9, 
   3.801142059200614*^9}, {3.801142737592031*^9, 3.801142739352854*^9}, {
   3.8011427789817677`*^9, 3.8011431604414673`*^9}, {3.801143206555656*^9, 
   3.801143213417911*^9}, {3.801143359196027*^9, 3.8011433729473467`*^9}, {
   3.801143521603307*^9, 3.8011435271517897`*^9}, {3.801143629126967*^9, 
   3.8011436439177732`*^9}, {3.801143686011788*^9, 3.801143772668084*^9}, {
   3.8011438175380373`*^9, 3.801143829888122*^9}, {3.801143872594615*^9, 
   3.801143967277926*^9}, {3.8011440021808357`*^9, 3.801144165634389*^9}, {
   3.801144215209948*^9, 3.801144395252652*^9}, {3.8011444378501053`*^9, 
   3.801144457823759*^9}, {3.8011445315837183`*^9, 3.801144555406068*^9}, {
   3.801145692556509*^9, 3.8011456925580482`*^9}, 3.8011459751176367`*^9, 
   3.8013434344774513`*^9, {3.801398760946598*^9, 3.801398795258624*^9}, 
   3.8013988641661997`*^9},ExpressionUUID->"02009a78-f5d6-4c78-9163-\
9a5981386460"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem: ", "Subsubsection",
 CellChangeTimes->{{3.801398888570985*^9, 
  3.8013989058003902`*^9}},ExpressionUUID->"8998964a-102d-4e3f-a2ae-\
d35f033c7b6b"],

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "90be5d36-9383-4381-8ded-719d24eb7822"],
 "(t) for a given set of boundary conditions ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "deed5a6e-3acb-49f9-bbb1-132ca8b02706"],
 "(0).\n\nPrinciple: \n\nFor  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    OverscriptBox["u", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "abe6070e-d05e-4d73-9702-a300940f42dd"],
 " = AA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "ae5435f9-acf8-4659-b0b2-8ace4dfef99b"],
 ", \n\nif AA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "93094800-eda8-4616-ab85-8c45326ff9c6"],
 " = \[Lambda] ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "7c45bbfd-359f-454b-8a2d-7ae40ba77d34"],
 ", then \n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["\[DifferentialD]", 
     RowBox[{"\[DifferentialD]", "t"}]], 
    OverscriptBox["x", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "22228b55-7064-4a32-8eeb-f85de2d3806e"],
 " = \[Lambda] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["e", 
     RowBox[{"\[Lambda]", " ", "t"}]], " ", 
    OverscriptBox["x", "\[RightVector]"]}], TraditionalForm]],ExpressionUUID->
  "397e8f54-80ee-4af1-a0ba-c89d3ea84a63"],
 ", \n\nin which \[Lambda] is an eigenvalue of the matrix and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]], "Input",
  ExpressionUUID->"d7f12c8e-531f-477d-9d3d-4c7def886bf2"],
 " is the corresponding eigenvector. "
}], "Text",
 CellChangeTimes->{{3.801398911771311*^9, 3.8013989433702803`*^9}, {
  3.8013992678923492`*^9, 3.8013994805490503`*^9}, {3.8013995266497507`*^9, 
  3.8013995499622383`*^9}, {3.801399593292647*^9, 3.801399637985523*^9}, {
  3.8013997367796173`*^9, 
  3.8013997842041597`*^9}},ExpressionUUID->"d7f6242a-853c-41df-9124-\
01ecdb93ef33"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up the chemical problem : ", "Subsubsection",
 CellChangeTimes->{{3.801399806649238*^9, 
  3.801399816776279*^9}},ExpressionUUID->"87a0486f-34c1-4d06-a2b1-\
6992142913ca"],

Cell["Define rate constants, provide immediate values for them. ", "Text",
 CellChangeTimes->{{3.801144593154138*^9, 3.80114459471489*^9}, {
  3.801144720657587*^9, 3.80114474678874*^9}, {3.80114494964826*^9, 
  3.8011449523140793`*^9}},ExpressionUUID->"29dbdcc9-d33b-43eb-b314-\
aad5be0e2a02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rateconstants", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], " ", "\[Rule]", " ", "150"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["k", 
      RowBox[{"-", "1"}]], " ", "\[Rule]", " ", "5"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["k", "2"], " ", "\[Rule]", " ", "1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["k", 
      RowBox[{"-", "2"}]], " ", "\[Rule]", " ", ".1000"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["k", "3"], " ", "\[Rule]", " ", "1"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["k", 
      RowBox[{"-", "3"}]], " ", "\[Rule]", " ", ".005"}]}], 
   "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.8011447581845903`*^9, 3.8011448565353193`*^9}, {
  3.801144894188702*^9, 3.801144911874354*^9}, {3.8011449746900387`*^9, 
  3.801144974873713*^9}, {3.801145325503998*^9, 3.801145345465602*^9}, {
  3.801145421318595*^9, 3.8011454442021437`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a1fc570d-ec1c-472f-abd0-0d242ead2ec0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], "\[Rule]", "150"}], ",", 
   RowBox[{
    SubscriptBox["k", 
     RowBox[{"-", "1"}]], "\[Rule]", "5"}], ",", 
   RowBox[{
    SubscriptBox["k", "2"], "\[Rule]", "1000"}], ",", 
   RowBox[{
    SubscriptBox["k", 
     RowBox[{"-", "2"}]], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["k", "3"], "\[Rule]", "1"}], ",", 
   RowBox[{
    SubscriptBox["k", 
     RowBox[{"-", "3"}]], "\[Rule]", "0.005`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.801399877718216*^9, 3.801400089823533*^9, 3.801400124110499*^9, 
   3.8014031808243923`*^9, 3.801403822312608*^9, 3.801405202832004*^9, 
   3.801406005749194*^9, 3.801413367394061*^9, 3.801414021631298*^9, 
   3.801414677721081*^9, {3.8014158490615273`*^9, 3.8014158709363413`*^9}, 
   3.801416173438711*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"8e3cce14-58cf-46aa-b919-473e5b5684b8"]
}, Open  ]],

Cell[TextData[{
 "Define the initial conditions,  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["u", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "9e229b3c-ee53-46de-bd85-5531991e4554"],
 ":"
}], "Text",
 CellChangeTimes->{{3.801399895556674*^9, 
  3.801399935074719*^9}},ExpressionUUID->"21f30b49-56b5-4e54-85b3-\
ffb160fa58a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"initialconcentrations", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"aa", " ", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"bb", " ", "\[Rule]", " ", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"cc", " ", "\[Rule]", " ", "0"}]}], "\[IndentingNewLine]", 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["u", "\[RightVector]"], "0"], "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aa", ",", " ", "bb", ",", " ", "cc"}], "}"}], "/.", " ", 
     "initialconcentrations"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox[
   OverscriptBox["u", "\[RightVector]"], "0"], "//", "MatrixForm"}]}], "Input",\

 CellChangeTimes->{{3.801399941581251*^9, 3.801400018327516*^9}, {
  3.801400048439208*^9, 3.801400119141178*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ed4ec879-3d19-434a-999b-7b73f100f857"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"1"},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8014000898947353`*^9, 3.8014001241834183`*^9, 3.80140318097631*^9, 
   3.801403822403199*^9, 3.8014052029111967`*^9, 3.801406005799951*^9, 
   3.801413367516551*^9, 3.801414021826058*^9, 3.8014146777931147`*^9, {
   3.80141584914688*^9, 3.8014158713078527`*^9}, 3.8014161735497627`*^9},
 CellLabel->
  "Out[37]//MatrixForm=",ExpressionUUID->"c486b4cf-26e5-47c6-9cd6-\
e8c387d69699"]
}, Open  ]],

Cell[TextData[StyleBox["Solution: ", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.800050154457774*^9, 3.8000501567527103`*^9}, 
   3.800050198446967*^9, {3.801399845166587*^9, 
   3.8013998468783407`*^9}},ExpressionUUID->"50cde2ff-06b3-4328-a430-\
c1bc6a3612a8"],

Cell["Define AA. ", "Text",
 CellChangeTimes->{{3.801144981407901*^9, 3.801144983184916*^9}, {
  3.801145192986655*^9, 
  3.80114520493651*^9}},ExpressionUUID->"8362c32e-2700-4b71-8f06-\
58da125e4436"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AA", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["k", "1"], "+", " ", 
            SubscriptBox["k", 
             RowBox[{"-", "3"}]]}], ")"}]}], ",", 
         SubscriptBox["k", 
          RowBox[{"-", "1"}]], ",", " ", 
         SubscriptBox["k", "3"]}], " ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["k", "1"], ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["k", "2"], "+", 
            SubscriptBox["k", 
             RowBox[{"-", "1"}]]}], ")"}]}], ",", " ", 
         SubscriptBox["k", 
          RowBox[{"-", "2"}]]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["k", 
          RowBox[{"-", "3"}]], ",", " ", 
         SubscriptBox["k", "2"], ",", " ", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["k", 
             RowBox[{"-", "2"}]], "+", 
            SubscriptBox["k", "3"]}], ")"}]}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "/.", " ", "rateconstants"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "comment", " ", "out", " ", "the", " ", "rateconstants", " ", 
    "substitution", " ", "for", " ", "a", " ", "theoretical", " ", 
    "solution"}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"AA", "//", "MatrixForm"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.801145209160058*^9, 3.8011452112103863`*^9}, {
  3.8011452523978977`*^9, 3.801145316275066*^9}, {3.801145459536981*^9, 
  3.801145498828485*^9}, {3.8011455447926493`*^9, 3.801145621905356*^9}, {
  3.801145718363949*^9, 3.801145758606667*^9}, {3.801399865392501*^9, 
  3.801399870262384*^9}, {3.801405022260106*^9, 3.801405062032248*^9}, {
  3.801405189667623*^9, 3.8014052242019863`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"b5551024-4e5b-4ccc-a846-479a20ed52a4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "150.005`"}], "5", "1"},
     {"150", 
      RowBox[{"-", "1005"}], "0.1`"},
     {"0.005`", "1000", 
      RowBox[{"-", "1.1`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801399872200521*^9, 3.801399877795472*^9}, 
   3.801400089975975*^9, 3.80140012425373*^9, 3.8014031811652718`*^9, 
   3.80140382249372*^9, 3.8014052029975348`*^9, 3.801406005851944*^9, 
   3.8014133676759663`*^9, 3.801414022127138*^9, 3.801414677814703*^9, {
   3.801415849246866*^9, 3.801415871653751*^9}, 3.801416173572432*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"3f8332f8-1723-4e64-a7b9-\
b94472727a53"]
}, Open  ]],

Cell[TextData[{
 "Find the eigenvalues and eigenvectors of AA.\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "787bd5bf-967a-41ad-acfa-4572a34240ff"],
 " is an eigenvector of AA if\n\nAA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "05ad678d-1046-4f58-90b3-cadc61f3f315"],
 " = \[Lambda] ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "8b79082d-7f30-4fc7-9a90-199ea2a3d52a"],
 ",\n\nand \[Lambda] is the corresponding eigenvalue. \n\nRearranging \
provides: \n\nAA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "6f259e69-9bc3-4d2c-bcbd-aa5a0a36e4dc"],
 " = \[Lambda] ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "e2a37939-d685-491e-8d47-8e982076aac9"],
 "\n\nAA ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "c7fb0d06-7e09-41de-b9f4-204651d038ee"],
 "- \[Lambda] ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "2093d4ef-78ed-49a6-8635-d078eeacc67b"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "e80f69ba-10db-46e8-9688-bd3bb6799e4e"],
 "\n\n(AA - \[Lambda] II) ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "1dcbe7ff-7e2b-4ab9-9d8f-d743efcd07c3"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "23918580-1ce9-4b48-a793-a0a1bc5a4ce7"],
 "\n\nin which II is the identity matrix. Rejecting the useless solution ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "78b94358-0b92-404b-847a-ef3ba94e031f"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "818938b4-ff72-4dc4-9cde-68323f8533a6"],
 ", this equation is only true when AA - \[Lambda] II is not invertible, \
meaning its determinant must = 0. \n\ndet(AA - \[Lambda] II) = 0, \n\nwhich \
provides the characteristic equation of the matrix.\n\nFind the \
characteristic equation: "
}], "Text",
 CellChangeTimes->{{3.801400723602643*^9, 3.801401132630272*^9}, {
   3.801401315991127*^9, 3.8014013948016987`*^9}, {3.801401478244171*^9, 
   3.801401490049445*^9}, {3.8014020630897503`*^9, 3.8014020639377613`*^9}, 
   3.801403326453045*^9},ExpressionUUID->"02a30a9d-d2d2-4b21-b428-\
1fe1fcfcba31"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<\\t\\t\\tAA:\>\"", ",", " ", "\"\<Identity Matrix:\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AA", "//", "MatrixForm"}], ",", " ", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "//", "MatrixForm"}]}], 
      "}"}]}], "}"}], "//", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<\\t\\t\\t\\tAA - evalue II:\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AA", " ", "-", " ", 
        RowBox[{"evalue", " ", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], "//", "MatrixForm"}], 
      "}"}]}], "}"}], "//", "TableForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\"\<Characteristic equation:\>\"", ",", "\[IndentingNewLine]", 
    "\"\<det(AA - evalue II) = 0\>\""}], "}"}], "//", "TableForm"}]}], "Input",\

 CellChangeTimes->{{3.801402067677541*^9, 3.801402130627389*^9}, {
  3.801402200173525*^9, 3.801402206394182*^9}, {3.801402385964594*^9, 
  3.801402469308378*^9}, {3.801402501845161*^9, 3.801402668765823*^9}, {
  3.801403212937681*^9, 3.801403259508984*^9}, {3.801403455836594*^9, 
  3.801403580722095*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4a9ea446-294d-489b-93b1-6c42a33cff54"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\t\\t\\tAA:\"\>", "\<\"Identity Matrix:\"\>"},
    {
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", "150.005`"}], "5", "1"},
         {"150", 
          RowBox[{"-", "1005"}], "0.1`"},
         {"0.005`", "1000", 
          RowBox[{"-", "1.1`"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "0"},
         {"0", "1", "0"},
         {"0", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.801403181249011*^9, {3.8014032224663553`*^9, 3.801403261141211*^9}, {
   3.8014034573070717`*^9, 3.801403468445582*^9}, 3.801403507164208*^9, {
   3.8014035552317867`*^9, 3.801403580973333*^9}, 3.801403822591316*^9, 
   3.801405203087222*^9, 3.801406005911521*^9, 3.801413367846581*^9, 
   3.801414022385127*^9, 3.8014146778826847`*^9, {3.801415849342434*^9, 
   3.801415871946312*^9}, 3.801416173679553*^9},
 CellLabel->
  "Out[40]//TableForm=",ExpressionUUID->"a06a405c-2fcc-4199-8068-\
0586540ea862"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"\\t\\t\\t\\tAA - evalue II:\"\>"},
    {
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           RowBox[{"-", "150.005`"}], "-", "evalue"}], "5", "1"},
         {"150", 
          RowBox[{
           RowBox[{"-", "1005"}], "-", "evalue"}], "0.1`"},
         {"0.005`", "1000", 
          RowBox[{
           RowBox[{"-", "1.1`"}], "-", "evalue"}]}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{"\t\t\t\tAA - evalue II:", {
     MatrixForm[{{-150.005 - $CellContext`evalue, 5, 1}, {
       150, -1005 - $CellContext`evalue, 0.1}, {
       0.005, 1000, -1.1 - $CellContext`evalue}}]}}]]], "Output",
 CellChangeTimes->{
  3.801403181249011*^9, {3.8014032224663553`*^9, 3.801403261141211*^9}, {
   3.8014034573070717`*^9, 3.801403468445582*^9}, 3.801403507164208*^9, {
   3.8014035552317867`*^9, 3.801403580973333*^9}, 3.801403822591316*^9, 
   3.801405203087222*^9, 3.801406005911521*^9, 3.801413367846581*^9, 
   3.801414022385127*^9, 3.8014146778826847`*^9, {3.801415849342434*^9, 
   3.801415871946312*^9}, 3.801416173687201*^9},
 CellLabel->
  "Out[41]//TableForm=",ExpressionUUID->"f9f9afc1-f425-42f3-91a2-\
88b419bd2297"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Characteristic equation:\"\>"},
     {"\<\"det(AA - evalue II) = 0\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.801403181249011*^9, {3.8014032224663553`*^9, 3.801403261141211*^9}, {
   3.8014034573070717`*^9, 3.801403468445582*^9}, 3.801403507164208*^9, {
   3.8014035552317867`*^9, 3.801403580973333*^9}, 3.801403822591316*^9, 
   3.801405203087222*^9, 3.801406005911521*^9, 3.801413367846581*^9, 
   3.801414022385127*^9, 3.8014146778826847`*^9, {3.801415849342434*^9, 
   3.801415871946312*^9}, 3.801416173692644*^9},
 CellLabel->
  "Out[42]//TableForm=",ExpressionUUID->"682bdbd5-1511-4fef-822c-\
cd2fb4f66879"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ceqnmtx", " ", "=", " ", 
   RowBox[{"AA", " ", "-", " ", 
    RowBox[{"evalue", " ", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ceqn", " ", "=", " ", 
  RowBox[{"Det", "[", "ceqnmtx", "]"}]}]}], "Input",
 CellChangeTimes->{{3.80140320625841*^9, 3.801403209093225*^9}, {
  3.801403270035776*^9, 3.80140330345872*^9}, {3.8014033821168213`*^9, 
  3.801403394108728*^9}, {3.801403593300578*^9, 3.801403637056623*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"51b1b877-b9d1-46fc-bee3-5e12bc27a8f6"],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"151175.5255`", " ", "evalue"}], "-", 
  RowBox[{"1156.105`", " ", 
   SuperscriptBox["evalue", "2"]}], "-", 
  SuperscriptBox["evalue", "3"]}]], "Output",
 CellChangeTimes->{
  3.8014036395149918`*^9, 3.801403822689411*^9, 3.801405203171876*^9, 
   3.801406005983264*^9, 3.801413367887113*^9, 3.8014140225354757`*^9, 
   3.801414677963573*^9, {3.801415849438663*^9, 3.8014158722880363`*^9}, 
   3.801416173797204*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"297ea4ac-42e3-46d2-bdf1-e9593c271669"]
}, Open  ]],

Cell["Set the characteristic equation = 0 and solve for evalue: ", "Text",
 CellChangeTimes->{{3.801403334233335*^9, 3.801403356032874*^9}, {
  3.801403656649064*^9, 
  3.801403668594808*^9}},ExpressionUUID->"5b56995e-c44d-4d7c-8162-\
f547109ecb1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lambdasubs", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"ceqn", " ", "\[Equal]", " ", "0"}], ",", " ", "evalue"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.801403671355522*^9, 3.801403813848983*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"be821dec-7e21-4ccc-a2e8-e60a7446a4d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"evalue", "\[Rule]", 
     RowBox[{"-", "1005.8014535419695`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"evalue", "\[Rule]", 
     RowBox[{"-", "150.30354645803047`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"evalue", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8014037647022676`*^9, 3.80140382278804*^9}, 
   3.801405203314817*^9, 3.801406006040667*^9, 3.8014133680075808`*^9, 
   3.801414022715128*^9, 3.801414678034848*^9, {3.801415849527618*^9, 
   3.8014158726646557`*^9}, 3.801416173906452*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"7b59f89e-6cec-4b2f-add6-fcfbc51b5def"]
}, Open  ]],

Cell["Verify with Mathematica\[CloseCurlyQuote]s Eigenvalues[] function: ", \
"Text",
 CellChangeTimes->{{3.8014040163772087`*^9, 
  3.8014040470004873`*^9}},ExpressionUUID->"ae9d7824-5895-4e01-bbe5-\
2999a70e7019"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "AA", "]"}]], "Input",
 CellChangeTimes->{{3.8014040516946087`*^9, 3.8014040562480183`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"34323b51-7242-4863-8e66-58b9cd0884f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1005.8014535419701`"}], ",", 
   RowBox[{"-", "150.30354645803058`"}], ",", 
   RowBox[{"-", "6.774005821411017`*^-16"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8014040575370073`*^9, 3.801405203410088*^9, 3.801406006096328*^9, 
   3.8014133681305923`*^9, 3.801414022898796*^9, 3.801414678108919*^9, {
   3.8014158495465403`*^9, 3.801415873109573*^9}, 3.801416174010641*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"808d7d96-b491-428e-8c2f-4a5a1fdc508e"]
}, Open  ]],

Cell[TextData[{
 "Note that the third eigenvalue in both solutions is a rounding error;  the \
theoretical result is 0. The reader may demonstrate this by repeating  the \
method up to this point, except commenting out the substitution of the rate \
constants (\[OpenCurlyDoubleQuote] /. rateconstants\[CloseCurlyDoubleQuote]) \
in the definition of AA.   \n\n\nFind eigenvectors. \n\nFor each \[Lambda], \
solve:\n\ndet(AA - \[Lambda] II) = 0 \n\nand use the resulting set of \
equations to solve for the components of the eigvenvector. \n\nFor \[Lambda] \
= 0: \n\n(AA - 0 II) ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "8feca43a-7af9-4b97-a235-81ea2bec4926"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "3832d507-ed33-4d7e-b942-83c109a06be5"]
}], "Text",
 CellChangeTimes->{{3.801404086774167*^9, 3.8014041594655333`*^9}, {
  3.801404202776905*^9, 3.801404232815659*^9}, {3.8014043822346354`*^9, 
  3.801404390266329*^9}, {3.801404420497239*^9, 3.8014045330004377`*^9}, {
  3.80140485051892*^9, 3.801404981314028*^9}, {3.801405114610392*^9, 
  3.801405147665773*^9}, {3.8014052575596647`*^9, 3.801405287014551*^9}, {
  3.801405380419332*^9, 3.801405389531035*^9}, {3.801405442011994*^9, 
  3.801405468350292*^9}},ExpressionUUID->"0a92d727-1cad-4514-8ac6-\
12ef470bfc2e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"AA", " ", "-", " ", 
     RowBox[{"0", " ", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], "//", 
   "MatrixForm"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"AA", " ", "-", " ", 
     RowBox[{"0", " ", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], " ", ".", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], "//", "MatrixForm", 
  " "}]}], "Input",
 CellChangeTimes->{{3.801405904194593*^9, 3.8014059948324957`*^9}, {
  3.8014060346826277`*^9, 3.8014060593627253`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"9a41df96-12ef-4b37-8760-72d01f9d6d79"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "150.005`"}], "5", "1"},
     {"150", 
      RowBox[{"-", "1005"}], "0.1`"},
     {"0.005`", "1000", 
      RowBox[{"-", "1.1`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801405967017696*^9, 3.801406006379786*^9}, {
   3.801406048524548*^9, 3.801406060594185*^9}, 3.801413368356102*^9, 
   3.8014140231748657`*^9, 3.801414678195444*^9, {3.8014158496312027`*^9, 
   3.801415873338831*^9}, 3.801416174120471*^9},
 CellLabel->
  "Out[47]//MatrixForm=",ExpressionUUID->"68f597ad-409d-4dcb-bef7-\
7be70141277c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "150.005`"}], " ", "x"}], "+", 
        RowBox[{"5", " ", "y"}], "+", "z"}]},
      {
       RowBox[{
        RowBox[{"150", " ", "x"}], "-", 
        RowBox[{"1005", " ", "y"}], "+", 
        RowBox[{"0.1`", " ", "z"}]}]},
      {
       RowBox[{
        RowBox[{"0.005`", " ", "x"}], "+", 
        RowBox[{"1000", " ", "y"}], "-", 
        RowBox[{"1.1`", " ", "z"}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801405967017696*^9, 3.801406006379786*^9}, {
   3.801406048524548*^9, 3.801406060594185*^9}, 3.801413368356102*^9, 
   3.8014140231748657`*^9, 3.801414678195444*^9, {3.8014158496312027`*^9, 
   3.801415873338831*^9}, 3.801416174126141*^9},
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"564fcde4-a4e4-4965-8009-\
6b02c1a1b87f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RowReduce", "[", "AA", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.801406836534917*^9, 3.801406851053958*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"1137424d-49ce-47b9-b89a-d647bea4c501"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.`", 
      RowBox[{"-", "0.0067031087791892315`"}]},
     {"0", "1", 
      RowBox[{"-", "0.001099966484456104`"}]},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801406841934265*^9, 3.801406851388682*^9}, 
   3.801413368505385*^9, 3.801414023367957*^9, 3.801414678269147*^9, {
   3.801415849718605*^9, 3.801415873611285*^9}, 3.801416174230116*^9},
 CellLabel->
  "Out[49]//MatrixForm=",ExpressionUUID->"b8e87aa9-32c4-4ecd-9b4d-\
606c65566ceb"]
}, Open  ]],

Cell["Provides  ", "Text",
 CellChangeTimes->{{3.80140702439852*^9, 
  3.8014070324299192`*^9}},ExpressionUUID->"45c5be80-f2bf-4601-bf4e-\
e73405b2a559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev3", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{".00670311", ",", " ", ".00109997", ",", " ", "1"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.801407036360406*^9, 3.801407096761743*^9}, 
   3.801413273551113*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"b673b600-840b-4e63-9f00-847d0cea6f72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00670311`", ",", "0.00109997`", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.80140709768327*^9, 3.8014133686481028`*^9, 3.801414023527372*^9, 
   3.801414678338553*^9, {3.801415849802053*^9, 3.8014158736906843`*^9}, 
   3.801416174386958*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"e2212a45-cedd-4f38-9670-5b70c11014da"]
}, Open  ]],

Cell["AA ev0: ", "Text",
 CellChangeTimes->{{3.801407114400096*^9, 
  3.801407118626453*^9}},ExpressionUUID->"a7686f76-778c-4ecb-a93e-\
5c80f6965050"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", " ", ".", " ", "ev3"}]], "Input",
 CellChangeTimes->{{3.801407125515917*^9, 3.80140712978332*^9}, 
   3.801413353999538*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"30416078-35aa-49e2-b983-363425c5ee13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.6554999993090291`*^-7"}], ",", 
   RowBox[{"-", "3.349999999929798`*^-6"}], ",", "3.515549999999479`*^-6"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.801407131779889*^9, 3.8014133688023577`*^9, 3.801414023702207*^9, 
   3.8014146784055777`*^9, {3.801415849884626*^9, 3.801415874293288*^9}, 
   3.8014161744893703`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"7f4484cf-9196-4747-975f-31c850bfe951"]
}, Open  ]],

Cell[TextData[{
 "For \[Lambda] = -150.304: \n\n(AA + 150.304 II) ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "52fa6186-52ff-45b0-9ee9-6f49b4df7859"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "f73c6848-c54a-45b4-ba77-9a6a1d64653e"]
}], "Text",
 CellChangeTimes->{{3.801412721684867*^9, 
  3.801412770966757*^9}},ExpressionUUID->"fe5e8c58-b1c1-4023-aaeb-\
33af1c408507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"RowReduce", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"AA", " ", "-", " ", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], "/.", " ", 
     RowBox[{"\[Lambda]", " ", "\[Rule]", "  ", 
      RowBox[{"lambdasubs", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "]"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.801412772668326*^9, 3.801412958790408*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"e114fb0d-58fb-4670-85cd-62e2f19f9d15"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.`", "0.8508007075455073`"},
     {"0", "1", "0.14919929245449276`"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801412875215994*^9, 3.801412959301252*^9}, 
   3.8014133688387136`*^9, 3.801414023870051*^9, 3.80141467847858*^9, {
   3.8014158500238457`*^9, 3.801415874600914*^9}, 3.801416174509184*^9},
 CellLabel->
  "Out[52]//MatrixForm=",ExpressionUUID->"09a513e7-61ba-40fd-8822-\
ef0ff71b7a4d"]
}, Open  ]],

Cell["Provides:", "Text",
 CellChangeTimes->{{3.801412962805896*^9, 3.801412978180883*^9}, 
   3.8014132541581182`*^9},ExpressionUUID->"ebfb7e5e-b8d4-4230-9fef-\
d1f2b990a599"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev2", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.8508007075455073`"}], ",", " ", 
    RowBox[{"-", "0.14919929245449276`"}], ",", " ", "1"}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.801413260629346*^9, 3.8014133230398912`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"83be4265-a3f0-4183-9017-38f5e7197987"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8508007075455073`"}], ",", 
   RowBox[{"-", "0.14919929245449276`"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.801413368968607*^9, 3.80141402394873*^9, 3.801414678545125*^9, {
   3.801415850106174*^9, 3.801415874673221*^9}, 3.801416174608289*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"869ef0c1-6dbf-47dd-a69b-211c8066d06c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", " ", ".", " ", "ev2"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.801413338654883*^9, 3.801413362814954*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"fbaf83c1-7fbe-4d38-8256-dccdda1af3b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"127.87836367309136`", ",", "22.425182784939146`", ",", 
   RowBox[{"-", "150.3035464580305`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.801413369121871*^9, 3.8014140241709557`*^9, 3.8014146786457872`*^9, {
   3.801415850189845*^9, 3.80141587487772*^9}, 3.801416174712551*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"8f408cfd-a55a-48be-bc2a-c397fe209a84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"127.878", "/", 
   RowBox[{"-", "150.304"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{"22.4252", " ", "/", " ", 
  RowBox[{"-", "150.304"}]}]}], "Input",
 CellChangeTimes->{{3.8014143604643*^9, 3.801414407090459*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"f7fc51f6-4943-488d-aa7e-2dd58d3b149b"],

Cell[BoxData[
 RowBox[{"-", "0.8507957206727699`"}]], "Output",
 CellChangeTimes->{
  3.801414407830954*^9, 3.801414678712308*^9, {3.801415850276067*^9, 
   3.8014158753876553`*^9}, 3.801416174815834*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"a84f16df-727d-43fa-b290-58133485ce46"],

Cell[BoxData[
 RowBox[{"-", "0.149198956780924`"}]], "Output",
 CellChangeTimes->{
  3.801414407830954*^9, 3.801414678712308*^9, {3.801415850276067*^9, 
   3.8014158753876553`*^9}, 3.8014161748198566`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"794748f1-338c-465a-b1c3-a065b9e985da"]
}, Open  ]],

Cell["Looks right. ", "Text",
 CellChangeTimes->{{3.801414419663225*^9, 
  3.8014144214074306`*^9}},ExpressionUUID->"1a5669ca-5180-4e40-a864-\
be1454c5afaf"],

Cell[TextData[{
 "For \[Lambda] = -1005.8: \n\n(AA + 1005.8) ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "5c59b4b0-e21b-4132-be5b-ee2029492e38"],
 " = ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["0", "\[RightVector]"], TraditionalForm]],ExpressionUUID->
  "97662731-bc0d-4fa1-ae35-8b04667f9da1"]
}], "Text",
 CellChangeTimes->{{3.801412721684867*^9, 3.801412770966757*^9}, {
  3.80141453761234*^9, 
  3.801414551617206*^9}},ExpressionUUID->"8973ce36-d1d7-4e3a-893e-\
47d275ca8fcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"RowReduce", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"AA", " ", "-", " ", 
        RowBox[{"\[Lambda]", " ", 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], ")"}], "/.", " ", 
      RowBox[{"\[Lambda]", " ", "\[Rule]", "  ", 
       RowBox[{"lambdasubs", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], "//",
    "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.801412772668326*^9, 3.801412958790408*^9}, {
  3.801414558879406*^9, 3.801414586062695*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"b592558c-c9fb-447c-8c5d-eaf4aeb17a50"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0.`", 
      RowBox[{"-", "0.0067031087791892315`"}]},
     {"0", "1", 
      RowBox[{"-", "0.001099966484456104`"}]},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.801412875215994*^9, 3.801412959301252*^9}, 
   3.8014133688387136`*^9, 3.801414023870051*^9, {3.801414560552244*^9, 
   3.801414586880465*^9}, 3.801414678785594*^9, {3.801415850297818*^9, 
   3.801415875750142*^9}, 3.801416174926565*^9},
 CellLabel->
  "Out[57]//MatrixForm=",ExpressionUUID->"f75ba548-0e1e-49ad-8bc1-\
b77188a9f888"]
}, Open  ]],

Cell["Provides:", "Text",
 CellChangeTimes->{{3.801412962805896*^9, 3.801412978180883*^9}, 
   3.8014132541581182`*^9},ExpressionUUID->"f6feadc1-02b1-4be1-a52e-\
3e6ddd51522f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev1", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
   "0.0067031087791892315`", ",", " ", "0.001099966484456104`", ",", " ", 
    "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.801413260629346*^9, 3.8014133230398912`*^9}, {
  3.8014146237304573`*^9, 3.801414669094385*^9}, {3.801416168253479*^9, 
  3.801416168394478*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"e54352c8-3341-4609-876b-51e2d88055ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0067031087791892315`", ",", "0.001099966484456104`", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.801413368968607*^9, 3.80141402394873*^9, 3.8014146788008327`*^9, {
   3.801415850376177*^9, 3.801415875817124*^9}, 3.801416175029717*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"5b339e3b-ecf1-4282-be22-fac70c4eedbc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AA", " ", ".", " ", "ev3"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.801413338654883*^9, 3.801413362814954*^9}, {
  3.801414693007321*^9, 3.801414693165012*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"6f36f1f7-e48f-4009-b32c-688433383e89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.6554999993090291`*^-7"}], ",", 
   RowBox[{"-", "3.349999999929798`*^-6"}], ",", "3.515549999999479`*^-6"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.801413369121871*^9, 3.8014140241709557`*^9, {3.8014146788656*^9, 
   3.801414694454414*^9}, {3.801415850459838*^9, 3.801415876124968*^9}, 
   3.801416175145783*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"b0124b0d-7291-4a62-915e-022cdc6b8e38"]
}, Open  ]],

Cell["\<\
Looks right. 

Regrouping: 

Show the eigenvalues and their corresponding eigenvectors. \
\>", "Text",
 CellChangeTimes->{{3.801414419663225*^9, 3.8014144214074306`*^9}, {
  3.801415645507085*^9, 
  3.801415670040834*^9}},ExpressionUUID->"2d1cc431-4441-4be8-b2d6-\
68ad08a06b34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"evals", " ", "=", " ", 
   RowBox[{"Re", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambdasubs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", " ", "1", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "lambdasubs", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"evectors", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"ev1", ",", " ", "ev2", ",", " ", "ev3"}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Join", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\""}], "}"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"evals", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
        RowBox[{"evectors", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "evals", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "//", 
  "TableForm"}]}], "Input",
 CellChangeTimes->{{3.801415694022251*^9, 3.8014156963260612`*^9}, {
  3.801415727420177*^9, 3.801415839166781*^9}, {3.801415910677842*^9, 
  3.801415923323728*^9}, {3.8014162149793997`*^9, 3.801416242983183*^9}, {
  3.8014162764569798`*^9, 3.801416397712957*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"168ccd7d-5d2c-447a-9180-6d2b3c57c9a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1005.8014535419695`"}], ",", 
   RowBox[{"-", "150.30354645803047`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.801415840153083*^9, 3.801415877159339*^9}, {
   3.80141591205301*^9, 3.801415923771482*^9}, 3.8014161752520638`*^9, 
   3.8014162433868217`*^9, {3.801416310267725*^9, 3.801416342851102*^9}, {
   3.801416385606577*^9, 3.8014163992106037`*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"947fb95b-f2e1-4518-a059-778b4f0e093f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.0067031087791892315`", ",", "0.001099966484456104`", ",", "1"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8508007075455073`"}], ",", 
     RowBox[{"-", "0.14919929245449276`"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.00670311`", ",", "0.00109997`", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.801415840153083*^9, 3.801415877159339*^9}, {
   3.80141591205301*^9, 3.801415923771482*^9}, 3.8014161752520638`*^9, 
   3.8014162433868217`*^9, {3.801416310267725*^9, 3.801416342851102*^9}, {
   3.801416385606577*^9, 3.8014163992232513`*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"c2f261c8-113b-4822-971f-5462df1e4b4f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Eigenvalues\"\>", "\<\"Eigenvectors\"\>"},
    {
     RowBox[{"-", "1005.8014535419695`"}], GridBox[{
       {"0.0067031087791892315`"},
       {"0.001099966484456104`"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {
     RowBox[{"-", "150.30354645803047`"}], GridBox[{
       {
        RowBox[{"-", "0.8508007075455073`"}]},
       {
        RowBox[{"-", "0.14919929245449276`"}]},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]},
    {"0.`", GridBox[{
       {"0.00670311`"},
       {"0.00109997`"},
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
    "Eigenvalues", "Eigenvectors"}, {-1005.8014535419695`, {
     0.0067031087791892315`, 0.001099966484456104, 
      1}}, {-150.30354645803047`, {-0.8508007075455073, -0.14919929245449276`,
       1}}, {0., {0.00670311, 0.00109997, 1}}}]]], "Output",
 CellChangeTimes->{{3.801415840153083*^9, 3.801415877159339*^9}, {
   3.80141591205301*^9, 3.801415923771482*^9}, 3.8014161752520638`*^9, 
   3.8014162433868217`*^9, {3.801416310267725*^9, 3.801416342851102*^9}, {
   3.801416385606577*^9, 3.801416399229615*^9}},
 CellLabel->
  "Out[78]//TableForm=",ExpressionUUID->"85d31dfa-7991-45aa-ba4a-\
882bfc3be0ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{955.5, 680.25},
WindowMargins->{{2.25, Automatic}, {2.25, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/david/print.pdf"},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b7527512-8948-4497-be3e-75eecbb05400"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 73105, 1205, 102, "Text",ExpressionUUID->"a4af07f8-0f31-4d4d-8ddf-0797ee099977"],
Cell[CellGroupData[{
Cell[73688, 1229, 364, 7, 222, "Title",ExpressionUUID->"969e6714-a59c-4d3f-9d75-e00f7d8b7b2b"],
Cell[74055, 1238, 510, 8, 35, "Text",ExpressionUUID->"db93a966-6d4f-4e83-aa73-f274025bcb39"],
Cell[CellGroupData[{
Cell[74590, 1250, 197, 3, 29, "Input",ExpressionUUID->"d5e153e9-a887-4a09-bf08-47790220666f"],
Cell[74790, 1255, 587, 11, 33, "Output",ExpressionUUID->"6eefd2de-dd2f-4b09-861e-2d2931e38991"]
}, Open  ]],
Cell[75392, 1269, 832, 19, 196, "Text",ExpressionUUID->"3630ed3d-5165-4127-8c22-b13aeac4d0a0"],
Cell[76227, 1290, 264, 4, 40, "Text",ExpressionUUID->"f10ad161-96a8-441f-859b-38f8adcec4fa"],
Cell[CellGroupData[{
Cell[76516, 1298, 11693, 197, 231, "Input",ExpressionUUID->"948c7bec-bde0-44bc-abf3-fd1d23cf4d2e"],
Cell[88212, 1497, 12026, 203, 235, "Output",ExpressionUUID->"65ed21fc-45e5-481f-a560-67f22508bad3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100275, 1705, 247, 6, 45, "Subsubsection",ExpressionUUID->"87ac86e4-9f78-4b00-82e4-a470a2824931"],
Cell[100525, 1713, 9878, 320, 386, "Text",ExpressionUUID->"02009a78-f5d6-4c78-9163-9a5981386460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110440, 2038, 162, 3, 45, "Subsubsection",ExpressionUUID->"8998964a-102d-4e3f-a2ae-d35f033c7b6b"],
Cell[110605, 2043, 2222, 62, 271, "Text",ExpressionUUID->"d7f6242a-853c-41df-9124-01ecdb93ef33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112864, 2110, 181, 3, 45, "Subsubsection",ExpressionUUID->"87a0486f-34c1-4d06-a2b1-6992142913ca"],
Cell[113048, 2115, 294, 4, 35, "Text",ExpressionUUID->"29dbdcc9-d33b-43eb-b314-aad5be0e2a02"],
Cell[CellGroupData[{
Cell[113367, 2123, 1168, 29, 174, "Input",ExpressionUUID->"a1fc570d-ec1c-472f-abd0-0d242ead2ec0"],
Cell[114538, 2154, 925, 24, 33, "Output",ExpressionUUID->"8e3cce14-58cf-46aa-b919-473e5b5684b8"]
}, Open  ]],
Cell[115478, 2181, 340, 10, 35, "Text",ExpressionUUID->"21f30b49-56b5-4e54-85b3-ffb160fa58a4"],
Cell[CellGroupData[{
Cell[115843, 2195, 1051, 26, 195, "Input",ExpressionUUID->"ed4ec879-3d19-434a-999b-7b73f100f857"],
Cell[116897, 2223, 942, 26, 79, "Output",ExpressionUUID->"c486b4cf-26e5-47c6-9cd6-e8c387d69699"]
}, Open  ]],
Cell[117854, 2252, 266, 4, 40, "Text",ExpressionUUID->"50cde2ff-06b3-4328-a430-c1bc6a3612a8"],
Cell[118123, 2258, 201, 4, 35, "Text",ExpressionUUID->"8362c32e-2700-4b71-8f06-58da125e4436"],
Cell[CellGroupData[{
Cell[118349, 2266, 2171, 54, 216, "Input",ExpressionUUID->"b5551024-4e5b-4ccc-a846-479a20ed52a4"],
Cell[120523, 2322, 1054, 27, 79, "Output",ExpressionUUID->"3f8332f8-1723-4e64-a7b9-b94472727a53"]
}, Open  ]],
Cell[121592, 2352, 2692, 71, 564, "Text",ExpressionUUID->"02a30a9d-d2d2-4b21-b428-1fe1fcfcba31"],
Cell[CellGroupData[{
Cell[124309, 2427, 1409, 37, 133, "Input",ExpressionUUID->"4a9ea446-294d-489b-93b1-6c42a33cff54"],
Cell[125721, 2466, 2207, 59, 98, "Output",ExpressionUUID->"a06a405c-2fcc-4199-8068-0586540ea862"],
Cell[127931, 2527, 1914, 48, 97, "Output",ExpressionUUID->"f9f9afc1-f425-42f3-91a2-88b419bd2297"],
Cell[129848, 2577, 1044, 26, 49, "Output",ExpressionUUID->"682bdbd5-1511-4fef-822c-cd2fb4f66879"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130929, 2608, 585, 12, 51, "Input",ExpressionUUID->"51b1b877-b9d1-46fc-bee3-5e12bc27a8f6"],
Cell[131517, 2622, 563, 11, 33, "Output",ExpressionUUID->"297ea4ac-42e3-46d2-bdf1-e9593c271669"]
}, Open  ]],
Cell[132095, 2636, 249, 4, 35, "Text",ExpressionUUID->"5b56995e-c44d-4d7c-8162-f547109ecb1f"],
Cell[CellGroupData[{
Cell[132369, 2644, 328, 7, 29, "Input",ExpressionUUID->"be821dec-7e21-4ccc-a2e8-e60a7446a4d8"],
Cell[132700, 2653, 770, 17, 33, "Output",ExpressionUUID->"7b59f89e-6cec-4b2f-add6-fcfbc51b5def"]
}, Open  ]],
Cell[133485, 2673, 215, 4, 35, "Text",ExpressionUUID->"ae9d7824-5895-4e01-bbe5-2999a70e7019"],
Cell[CellGroupData[{
Cell[133725, 2681, 214, 3, 29, "Input",ExpressionUUID->"34323b51-7242-4863-8e66-58b9cd0884f8"],
Cell[133942, 2686, 514, 10, 36, "Output",ExpressionUUID->"808d7d96-b491-428e-8c2f-4a5a1fdc508e"]
}, Open  ]],
Cell[134471, 2699, 1406, 26, 380, "Text",ExpressionUUID->"0a92d727-1cad-4514-8ac6-12ef470bfc2e"],
Cell[CellGroupData[{
Cell[135902, 2729, 733, 19, 71, "Input",ExpressionUUID->"9a41df96-12ef-4b37-8760-72d01f9d6d79"],
Cell[136638, 2750, 964, 26, 79, "Output",ExpressionUUID->"68f597ad-409d-4dcb-bef7-7be70141277c"],
Cell[137605, 2778, 1290, 37, 68, "Output",ExpressionUUID->"564fcde4-a4e4-4965-8009-6b02c1a1b87f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138932, 2820, 241, 4, 29, "Input",ExpressionUUID->"1137424d-49ce-47b9-b89a-d647bea4c501"],
Cell[139176, 2826, 905, 24, 79, "Output",ExpressionUUID->"b8e87aa9-32c4-4ecd-9b4d-606c65566ceb"]
}, Open  ]],
Cell[140096, 2853, 153, 3, 35, "Text",ExpressionUUID->"45c5be80-f2bf-4601-bf4e-e73405b2a559"],
Cell[CellGroupData[{
Cell[140274, 2860, 319, 7, 29, "Input",ExpressionUUID->"b673b600-840b-4e63-9f00-847d0cea6f72"],
Cell[140596, 2869, 372, 7, 33, "Output",ExpressionUUID->"e2212a45-cedd-4f38-9670-5b70c11014da"]
}, Open  ]],
Cell[140983, 2879, 150, 3, 35, "Text",ExpressionUUID->"a7686f76-778c-4ecb-a93e-5c80f6965050"],
Cell[CellGroupData[{
Cell[141158, 2886, 232, 4, 29, "Input",ExpressionUUID->"30416078-35aa-49e2-b983-363425c5ee13"],
Cell[141393, 2892, 460, 10, 36, "Output",ExpressionUUID->"7f4484cf-9196-4747-975f-31c850bfe951"]
}, Open  ]],
Cell[141868, 2905, 503, 14, 81, "Text",ExpressionUUID->"fe5e8c58-b1c1-4023-aaeb-33af1c408507"],
Cell[CellGroupData[{
Cell[142396, 2923, 618, 15, 51, "Input",ExpressionUUID->"e114fb0d-58fb-4670-85cd-62e2f19f9d15"],
Cell[143017, 2940, 860, 22, 79, "Output",ExpressionUUID->"09a513e7-61ba-40fd-8822-ef0ff71b7a4d"]
}, Open  ]],
Cell[143892, 2965, 176, 3, 35, "Text",ExpressionUUID->"ebfb7e5e-b8d4-4230-9fef-d1f2b990a599"],
Cell[CellGroupData[{
Cell[144093, 2972, 354, 8, 29, "Input",ExpressionUUID->"83be4265-a3f0-4183-9017-38f5e7197987"],
Cell[144450, 2982, 397, 8, 33, "Output",ExpressionUUID->"869ef0c1-6dbf-47dd-a69b-211c8066d06c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144884, 2995, 234, 4, 35, "Code",ExpressionUUID->"fbaf83c1-7fbe-4d38-8256-dccdda1af3b5",
 InitializationCell->False],
Cell[145121, 3001, 398, 7, 33, "Output",ExpressionUUID->"8f408cfd-a55a-48be-bc2a-c397fe209a84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145556, 3013, 333, 7, 51, "Input",ExpressionUUID->"f7fc51f6-4943-488d-aa7e-2dd58d3b149b"],
Cell[145892, 3022, 283, 5, 33, "Output",ExpressionUUID->"a84f16df-727d-43fa-b290-58133485ce46"],
Cell[146178, 3029, 284, 5, 33, "Output",ExpressionUUID->"794748f1-338c-465a-b1c3-a065b9e985da"]
}, Open  ]],
Cell[146477, 3037, 157, 3, 35, "Text",ExpressionUUID->"1a5669ca-5180-4e40-a864-be1454c5afaf"],
Cell[146637, 3042, 546, 15, 81, "Text",ExpressionUUID->"8973ce36-d1d7-4e3a-893e-47d275ca8fcf"],
Cell[CellGroupData[{
Cell[147208, 3061, 707, 17, 51, "Input",ExpressionUUID->"b592558c-c9fb-447c-8c5d-eaf4aeb17a50"],
Cell[147918, 3080, 957, 25, 79, "Output",ExpressionUUID->"f75ba548-0e1e-49ad-8bc1-b77188a9f888"]
}, Open  ]],
Cell[148890, 3108, 176, 3, 35, "Text",ExpressionUUID->"f6feadc1-02b1-4be1-a52e-3e6ddd51522f"],
Cell[CellGroupData[{
Cell[149091, 3115, 425, 9, 29, "Input",ExpressionUUID->"e54352c8-3341-4609-876b-51e2d88055ef"],
Cell[149519, 3126, 368, 7, 33, "Output",ExpressionUUID->"5b339e3b-ecf1-4282-be22-fac70c4eedbc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149924, 3138, 283, 5, 35, "Code",ExpressionUUID->"6f36f1f7-e48f-4009-b32c-688433383e89",
 InitializationCell->False],
Cell[150210, 3145, 456, 10, 36, "Output",ExpressionUUID->"b0124b0d-7291-4a62-915e-022cdc6b8e38"]
}, Open  ]],
Cell[150681, 3158, 289, 10, 127, "Text",ExpressionUUID->"2d1cc431-4441-4be8-b2d6-68ad08a06b34"],
Cell[CellGroupData[{
Cell[150995, 3172, 1753, 44, 278, "Input",ExpressionUUID->"168ccd7d-5d2c-447a-9180-6d2b3c57c9a2"],
Cell[152751, 3218, 503, 9, 33, "Output",ExpressionUUID->"947fb95b-f2e1-4518-a059-778b4f0e093f"],
Cell[153257, 3229, 756, 18, 33, "Output",ExpressionUUID->"c2f261c8-113b-4822-971f-5462df1e4b4f"],
Cell[154016, 3249, 2397, 66, 178, "Output",ExpressionUUID->"85d31dfa-7991-45aa-ba4a-882bfc3be0ff"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

